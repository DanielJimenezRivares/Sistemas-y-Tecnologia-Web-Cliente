{"mappings":"AAAA,MAAM,uBAAuB;IAC3B,WAAW,qBAAqB;QAAE,OAAO;YAAC;SAAQ;IAAE;IAEpD,aAAc;QACZ,KAAK;QACL,QAAQ,GAAG,CAAC;QAEZ,MAAM,OAAO,IAAI,CAAC,YAAY,CAAC;YAAE,MAAM;QAAS;QAChD,MAAM,MAAM,SAAS,cAAc,CAAC;QACpC,KAAK,WAAW,CAAC,IAAI,OAAO,CAAC,SAAS,CAAC;QAEvC,IAAI,CAAC,MAAM,GAAG,KAAK,cAAc,CAAC;QAElC,IAAI,CAAC,MAAM,GAAG;QACd,qCAAqC;QACrC,qCAAqC;QACrC,IAAI;QAEJ,IAAI,CAAC,CAAA,MAAO;IACd;IAEA,oBAAoB;QAAE,QAAQ,GAAG,CAAC;QAA0D,IAAI,CAAC,CAAA,MAAO;IAAG;IAC3G,uBAAuB;QAAE,QAAQ,GAAG,CAAC;IAA6D;IAElG,yBAAyB,IAAI,EAAE,QAAQ,EAAE,QAAQ,EAAE;QACjD,QAAQ,GAAG,CAAC,CAAC,mDAA4C,EAAE,KAAK,CAAC,CAAC,EAAE;YAAE;YAAU;QAAS;QACzF,IAAI,SAAS,WAAW,aAAa,UAAU;YAC7C,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,CAAA,MAAO,CAAC,UAAU,IAAI,CAAC,MAAM;YAChD,IAAI,CAAC,CAAA,MAAO;QACd;IACF;IAEA,cAAc;IACd,IAAI,QAAQ;QAAE,OAAO,IAAI,CAAC,MAAM;IAAE;IAClC,IAAI,MAAM,CAAC,EAAE;QAAE,IAAI,CAAC,YAAY,CAAC,SAAS,OAAO,IAAI,CAAC,CAAA,KAAM,CAAC;IAAM;IAEnE,MAAM;QACJ,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE;QACvB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,GAAG;IAC7B;IAEA,MAAM;QACJ,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE;QACvB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,GAAG;IAC7B;IAEA,SAAS;IACT,CAAA,MAAO;QAAK,IAAI,CAAC,MAAM,CAAC,WAAW,GAAG,IAAI,CAAC,MAAM;IAAE;IAEnD,UAAU;IACV,CAAA,MAAO,CAAC,GAAG,EAAE,QAAQ;QACnB,MAAM,IAAI,OAAO;QACjB,OAAO,OAAO,QAAQ,CAAC,KAAK,IAAI,CAAC,CAAA,KAAM,CAAC,KAAK,IAAI,CAAC,CAAA,KAAM,CAAC;IAC3D;IACA,CAAA,KAAM,CAAC,CAAC;QAAI,OAAO,KAAK,GAAG,CAAC,GAAG;IAAI;AACrC;AAEA,eAAe,MAAM,CAAC,mBAAmB;AAEzC,8CAA8C;AAC9C,MAAM,QAAQ,SAAS,cAAc,CAAC;AACtC,MAAM,YAAY,SAAS,cAAc,CAAC;AAC1C,MAAM,YAAY,SAAS,cAAc,CAAC;AAC1C,MAAM,SAAY,SAAS,cAAc,CAAC;AAC1C,MAAM,SAAY,SAAS,cAAc,CAAC;AAE1C,wDAAwD;AACxD,MAAM,OAAO,IAAI;AAEjB,UAAU,gBAAgB,CAAC,SAAS;IAClC,IAAI,CAAC,MAAM,QAAQ,CAAC,OAClB,MAAM,eAAe,CAAC;AAE1B;AAEA,UAAU,gBAAgB,CAAC,SAAS;IAClC,IAAI,MAAM,QAAQ,CAAC,OACjB,MAAM,WAAW,CAAC;AAEtB;AAEA,OAAO,gBAAgB,CAAC,SAAS,IAAM,KAAK,GAAG;AAC/C,OAAO,gBAAgB,CAAC,SAAS,IAAM,KAAK,GAAG","sources":["js/component.js"],"sourcesContent":["class ContadorSimple extends HTMLElement {\r\n  static get observedAttributes() { return [\"value\"]; }\r\n\r\n  constructor() {\r\n    super();\r\n    console.log(\"[ContadorSimple] Creado (constructor)\");\r\n\r\n    const root = this.attachShadow({ mode: \"closed\" });\r\n    const tpl = document.getElementById(\"tpl-contador-simple\");\r\n    root.appendChild(tpl.content.cloneNode(true));\r\n\r\n    this.$value = root.getElementById(\"value\");\r\n    \r\n    this._value = 0;\r\n    // if (!this.hasAttribute(\"value\")) {\r\n    //   this.setAttribute(\"value\", \"0\");\r\n    // }\r\n    \r\n    this.#render();\r\n  }\r\n\r\n  connectedCallback() { console.log(\"[ContadorSimple] Adjuntado al DOM (connectedCallback)\"); this.#render();}\r\n  disconnectedCallback() { console.log(\"[ContadorSimple] Separado del DOM (disconnectedCallback)\"); }\r\n\r\n  attributeChangedCallback(name, oldValue, newValue) {\r\n    console.log(`[ContadorSimple] attributeChangedCallback → ${name}:`, { oldValue, newValue });\r\n    if (name === \"value\" && oldValue !== newValue) {\r\n      this._value = this.#coerce(newValue, this._value);\r\n      this.#render();\r\n    }\r\n  }\r\n\r\n  // API pública\r\n  get value() { return this._value; }\r\n  set value(v) { this.setAttribute(\"value\", String(this.#clamp(v))); }\r\n\r\n  inc() {\r\n    if (!this.isConnected) return;\r\n    this.value = this._value + 1;\r\n  }\r\n\r\n  dec() {\r\n    if (!this.isConnected) return;\r\n    this.value = this._value - 1;\r\n  }\r\n\r\n  // Render\r\n  #render() { this.$value.textContent = this._value; }\r\n\r\n  // Helpers\r\n  #coerce(raw, fallback) {\r\n    const n = Number(raw);\r\n    return Number.isFinite(n) ? this.#clamp(n) : this.#clamp(fallback);\r\n  }\r\n  #clamp(n) { return Math.max(0, n); } // mínimo 0\r\n}\r\n\r\ncustomElements.define(\"contador-simple\", ContadorSimple);\r\n\r\n// ===== Lógica de la página (4 botones) =====\r\nconst mount = document.getElementById(\"mount\");\r\nconst btnAttach = document.getElementById(\"btn-attach\");\r\nconst btnDetach = document.getElementById(\"btn-detach\");\r\nconst btnInc    = document.getElementById(\"btn-inc\");\r\nconst btnDec    = document.getElementById(\"btn-dec\");\r\n\r\n// Una única instancia para ver constructor una sola vez\r\nconst comp = new ContadorSimple();\r\n\r\nbtnAttach.addEventListener(\"click\", () => {\r\n  if (!mount.contains(comp)) {\r\n    mount.replaceChildren(comp);\r\n  }\r\n});\r\n\r\nbtnDetach.addEventListener(\"click\", () => {\r\n  if (mount.contains(comp)) {\r\n    mount.removeChild(comp);\r\n  }\r\n});\r\n\r\nbtnInc.addEventListener(\"click\", () => comp.inc());\r\nbtnDec.addEventListener(\"click\", () => comp.dec());\r\n\r\n"],"names":[],"version":3,"file":"CicloVida.fd248966.js.map","sourceRoot":"/__parcel_source_root/"}